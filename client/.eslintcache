[{"C:\\developments\\Projects\\backend-api\\client\\src\\index.js":"1","C:\\developments\\Projects\\backend-api\\client\\src\\App.js":"2","C:\\developments\\Projects\\backend-api\\client\\src\\reportWebVitals.js":"3","C:\\developments\\Projects\\backend-api\\client\\src\\reducers\\rootReducers.js":"4","C:\\developments\\Projects\\backend-api\\client\\src\\components\\table\\Editable.js":"5","C:\\developments\\Projects\\backend-api\\client\\src\\components\\AddUser.js":"6","C:\\developments\\Projects\\backend-api\\client\\src\\components\\Posts.js":"7","C:\\developments\\Projects\\backend-api\\client\\src\\components\\Header.js":"8","C:\\developments\\Projects\\backend-api\\client\\src\\components\\SingleUser.js":"9","C:\\developments\\Projects\\backend-api\\client\\src\\components\\LoginUser.js":"10","C:\\developments\\Projects\\backend-api\\client\\src\\components\\AllUsers.js":"11","C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\ViewPost.js":"12","C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\AllPosts.js":"13","C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\AddPost.js":"14","C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\EditPost.js":"15","C:\\developments\\Projects\\backend-api\\client\\src\\components\\EditUser.js":"16"},{"size":799,"mtime":1612377201955,"results":"17","hashOfConfig":"18"},{"size":1359,"mtime":1611689552994,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1610387404077,"results":"20","hashOfConfig":"18"},{"size":485,"mtime":1611696250359,"results":"21","hashOfConfig":"18"},{"size":5247,"mtime":1612382735759,"results":"22","hashOfConfig":"18"},{"size":3340,"mtime":1611691017934,"results":"23","hashOfConfig":"18"},{"size":4732,"mtime":1611695683545,"results":"24","hashOfConfig":"18"},{"size":1177,"mtime":1611784757199,"results":"25","hashOfConfig":"18"},{"size":1885,"mtime":1611154428016,"results":"26","hashOfConfig":"18"},{"size":2705,"mtime":1611694802092,"results":"27","hashOfConfig":"18"},{"size":7726,"mtime":1612380603259,"results":"28","hashOfConfig":"18"},{"size":551,"mtime":1611259400063,"results":"29","hashOfConfig":"18"},{"size":2535,"mtime":1611695503281,"results":"30","hashOfConfig":"18"},{"size":2586,"mtime":1611173386379,"results":"31","hashOfConfig":"18"},{"size":1493,"mtime":1611262215639,"results":"32","hashOfConfig":"18"},{"size":1669,"mtime":1611176216580,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"o1bbkb",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},"C:\\developments\\Projects\\backend-api\\client\\src\\index.js",["75"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { rootReducer } from \"./reducers/rootReducers\";\r\nimport Editable from \"./components/table/Editable\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["76","77"],"C:\\developments\\Projects\\backend-api\\client\\src\\App.js",["78"],"// import logo from './logo.svg';\r\nimport AddUser from \"./components/AddUser\";\r\nimport AllUsers from \"./components/AllUsers\";\r\nimport SingleUser from \"./components/SingleUser\";\r\nimport Header from \"./components/Header\";\r\nimport Posts from \"./components/Posts\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport LoginUser from \"./components/LoginUser\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <AllUsers />\r\n          </Route>\r\n          {/* -------------------------------- */}\r\n          <Route path=\"/SingleUser/:id\">\r\n            <SingleUser />\r\n          </Route>\r\n          {/* ------------------------------------- */}\r\n\r\n          <Route path=\"/AddUser\" exact>\r\n            <AddUser />\r\n          </Route>\r\n          {/* ------------------------------------------- */}\r\n          <Route path=\"/posts\">\r\n            <Posts />\r\n          </Route>\r\n          {/* ----------------------------------------------- */}\r\n          <Route path=\"/login\">\r\n            <LoginUser />\r\n          </Route>\r\n          {/* ----------------------------------------------- */}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\reportWebVitals.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\reducers\\rootReducers.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\table\\Editable.js",["79"],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\AddUser.js",["80"],"import React, { useState, useRef } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import FileBase64 from 'react-file-base64';\r\n\r\nconst AddUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [img, setimg] = useState(\"\");\r\n\r\n  const msgRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = () => {\r\n    let user = { name, email, pwd, img };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/users/add\", user)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          history.push(\"/\");\r\n        } else {\r\n          msgRef.current.classList.remove(\"d-none\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Add user</h1>\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <h5 ref={msgRef} className=\"d-none\">\r\n            User Already Exists\r\n          </h5>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              New User information\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">Name</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    email=\"email\"\r\n                    name=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {/* //=================================================== */}\r\n              {/* <Row>\r\n                  <Col className=\"col-headers\">Desc</Col>\r\n                  <Col>\r\n                    <FileBase64\r\n                      multiple={false}\r\n                      onDone={({base64})=>setimg(base64)}\r\n                    />                </Col>\r\n                </Row> */}\r\n              {/* //========================================== */}\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                    Add User\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n\r\n//===============================================================================================================\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\components\\Posts.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\Header.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\SingleUser.js",["81"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SingleUser = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/users/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => setUser(data.data))\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Single user</h2>\r\n\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              Selected User information\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">ID</Col>\r\n                <Col>{user?._id}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Name</Col>\r\n                <Col>{user?.name}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>{user?.email}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>{user?.pwd}</Col>\r\n              </Row>\r\n              <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img width={100} src={user?.img}/></Col>\r\n            </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleUser;\r\n//==========================================================================================================\r\n\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\components\\LoginUser.js",["82"],"import React, { useState, useRef } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst LoginUser = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const msgRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    let user = { email, pwd };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/users/login\", user)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          dispatch({\r\n            type: \"DO_LOGIN\",\r\n            payload: res.data.data,\r\n          });\r\n          history.push(\"/\");\r\n        } else {\r\n          msgRef.current.innerHTML = res.data.msg;\r\n          msgRef.current.classList.remove(\"d-none\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err.data.code === \"error\") {\r\n        //   msgRef.current.classList.remove(\"d-none\");\r\n        // }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login user</h1>\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <h5 ref={msgRef} className=\"d-none\"></h5>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              Existing User Login\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    email=\"email\"\r\n                    name=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {/* //=================================================== */}\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                    Log In\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\components\\AllUsers.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\ViewPost.js",["103","104","105"],"import React, { useState } from \"react\";\r\nimport { Row, Col, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst ViewPost = ({ editPost }) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"col-headers\">Title</Col>\r\n            <Col>{editPost?.title}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-headers\">Description</Col>\r\n            <Col>{editPost?.description}</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\AllPosts.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\AddPost.js",[],"C:\\developments\\Projects\\backend-api\\client\\src\\components\\post\\EditPost.js",["106"],"import React, { useState } from \"react\";\r\nimport { Row, Col, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst EditPost = ({ editPost, EditPostData, setShowEdit }) => {\r\n  console.log(editPost);\r\n  const [title, setTitle] = useState(editPost?.title);\r\n  const [descrip, setDesccrip] = useState(editPost?.description);\r\n  console.log(title);\r\n  const handleSubmit = () => {\r\n    const newobj = {\r\n      ...editPost,\r\n      title,\r\n      description: descrip,\r\n    };\r\n    EditPostData(newobj);\r\n    setShowEdit(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <h1> Edit Post</h1> */}\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"col-headers\">Title</Col>\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-headers\">Description</Col>\r\n            <Col>\r\n              <textarea\r\n                type=\"text\"\r\n                onChange={(e) => setDesccrip(e.target.value)}\r\n                value={descrip}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                Save Post Changes\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","C:\\developments\\Projects\\backend-api\\client\\src\\components\\EditUser.js",["107"],"import React, { useState } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst EditUser = ({ userObj, EditUserData }) => {\r\n  const [name, setName] = useState(userObj.name);\r\n  const [email, setEmail] = useState(userObj.email);\r\n  const [pwd, setPwd] = useState(userObj.pwd);\r\n\r\n  console.log(\"Name:\", name);\r\n  const handleSubmit = () => {\r\n    let user = { name, email, pwd };\r\n    EditUserData(user);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col className=\"col-headers\">Name</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Email</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              email=\"email\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Password</Col>\r\n          <Col>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pwd\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center mt-2\">\r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n",{"ruleId":"108","severity":1,"message":"109","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":16},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":8,"column":50,"nodeType":"110","messageId":"111","endLine":8,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":58,"column":6,"nodeType":"119","endLine":58,"endColumn":12,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":11,"column":15,"nodeType":"110","messageId":"111","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":47,"column":20,"nodeType":"124","endLine":47,"endColumn":54},{"ruleId":"125","severity":1,"message":"126","line":46,"column":11,"nodeType":"124","endLine":46,"endColumn":47},{"ruleId":"108","severity":1,"message":"127","line":2,"column":31,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"108","severity":1,"message":"116","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"128","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"129","line":4,"column":21,"nodeType":"110","messageId":"111","endLine":4,"endColumn":24},{"ruleId":"108","severity":1,"message":"130","line":4,"column":26,"nodeType":"110","messageId":"111","endLine":4,"endColumn":29},{"ruleId":"108","severity":1,"message":"131","line":4,"column":31,"nodeType":"110","messageId":"111","endLine":4,"endColumn":37},{"ruleId":"108","severity":1,"message":"132","line":4,"column":39,"nodeType":"110","messageId":"111","endLine":4,"endColumn":44},{"ruleId":"108","severity":1,"message":"133","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"134","line":12,"column":9,"nodeType":"110","messageId":"111","endLine":12,"endColumn":16},{"ruleId":"108","severity":1,"message":"135","line":15,"column":16,"nodeType":"110","messageId":"111","endLine":15,"endColumn":23},{"ruleId":"108","severity":1,"message":"136","line":19,"column":10,"nodeType":"110","messageId":"111","endLine":19,"endColumn":18},{"ruleId":"108","severity":1,"message":"137","line":19,"column":20,"nodeType":"110","messageId":"111","endLine":19,"endColumn":31},{"ruleId":"108","severity":1,"message":"138","line":20,"column":10,"nodeType":"110","messageId":"111","endLine":20,"endColumn":22},{"ruleId":"108","severity":1,"message":"139","line":20,"column":24,"nodeType":"110","messageId":"111","endLine":20,"endColumn":39},{"ruleId":"108","severity":1,"message":"140","line":22,"column":10,"nodeType":"110","messageId":"111","endLine":22,"endColumn":14},{"ruleId":"108","severity":1,"message":"141","line":22,"column":16,"nodeType":"110","messageId":"111","endLine":22,"endColumn":23},{"ruleId":"108","severity":1,"message":"142","line":23,"column":10,"nodeType":"110","messageId":"111","endLine":23,"endColumn":13},{"ruleId":"108","severity":1,"message":"143","line":23,"column":15,"nodeType":"110","messageId":"111","endLine":23,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":227,"column":1,"nodeType":"146","messageId":"147","endLine":229,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":230,"column":1,"nodeType":"146","messageId":"147","endLine":249,"endColumn":2},{"ruleId":"108","severity":1,"message":"148","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"128","line":2,"column":20,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"108","severity":1,"message":"131","line":2,"column":31,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"108","severity":1,"message":"128","line":2,"column":20,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"108","severity":1,"message":"128","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["149"],"no-negated-in-lhs",["150"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cols'. Either include it or remove the dependency array. If 'setColumns' needs the current value of 'cols', you can also switch to useReducer instead of useState and read 'cols' in the reducer.","ArrayExpression",["151"],"'setimg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useRef' is defined but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'EditUser' is defined but never used.","'history' is assigned a value but never used.","'setCols' is assigned a value but never used.","'showEdit' is assigned a value but never used.","'setShowEdit' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","'setSelectedUser' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [cols, rows]",{"range":"154","text":"155"},[2651,2657],"[cols, rows]"]