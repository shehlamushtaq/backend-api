[{"E:\\Shehla\\expressjs\\backend-api\\client\\src\\index.js":"1","E:\\Shehla\\expressjs\\backend-api\\client\\src\\reportWebVitals.js":"2","E:\\Shehla\\expressjs\\backend-api\\client\\src\\App.js":"3","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Header.js":"4","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\SingleUser.js":"5","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AddUser.js":"6","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AllUsers.js":"7","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\EditUser.js":"8"},{"size":517,"mtime":1610944736154,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1610944736154,"results":"11","hashOfConfig":"10"},{"size":914,"mtime":1610944736153,"results":"12","hashOfConfig":"10"},{"size":543,"mtime":1610944736153,"results":"13","hashOfConfig":"10"},{"size":1885,"mtime":1611125885715,"results":"14","hashOfConfig":"10"},{"size":5894,"mtime":1611125441209,"results":"15","hashOfConfig":"10"},{"size":4268,"mtime":1611040771223,"results":"16","hashOfConfig":"10"},{"size":1638,"mtime":1611031408820,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1scoeyo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"E:\\Shehla\\expressjs\\backend-api\\client\\src\\index.js",[],["38","39"],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\reportWebVitals.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\App.js",["40"],"// import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AddUser from \"./components/AddUser\";\r\nimport AllUsers from \"./components/AllUsers\";\r\nimport SingleUser from \"./components/SingleUser\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <AllUsers />\r\n          </Route>\r\n          {/* -------------------------------- */}\r\n          <Route path=\"/SingleUser/:id\">\r\n            <SingleUser />\r\n          </Route>\r\n          {/* ------------------------------------- */}\r\n          <Route path=\"/AddUser\" exact>\r\n            <AddUser />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Header.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\SingleUser.js",["41"],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AddUser.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AllUsers.js",["42","43"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport EditUser from \"./EditUser\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst AllUsers = () => {\r\n  const history = useHistory();\r\n\r\n  const [state, setstate] = useState([]);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [reload, setReload] = useState(false);\r\n  \r\n  //===============================================================Delete User\r\n  const [msg, setMsg] = useState('')\r\n  const handleDelete =(id)=>{\r\n    console.log(id);\r\n    axios.delete(\"http://localhost:5000/api/users/\"+ id)\r\n    .then((res)=>{\r\n      console.log(res.data);\r\n      setMsg(`${id} is deleted`)\r\n    })\r\n    // .then((res) => {\r\n    //   history.push(\"/\");\r\n    // })\r\n    .then((res)=>{window.location = '/'})\r\n    .catch((e)=> console.log(e))\r\n    \r\n  }\r\n//================================================================show all users\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/users/\")\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, [reload]);\r\n\r\n  const DoEdit = (obj) => {\r\n    setSelectedUser(obj);\r\n    setShowEdit(true);\r\n  };\r\n\r\n  const EditUserData = (obj) => {\r\n    const newObj = {\r\n      ...selectedUser,\r\n      ...obj,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:5000/api/users/edit\", newObj)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setShowEdit(false);\r\n        setSelectedUser({});\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>all users</h3>\r\n\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\">\r\n              <Row className=\"col-headers\">\r\n                <Col lg={4} md={4} sm={4} xs={4}>\r\n                  Name\r\n                </Col>\r\n                <Col lg={4} md={4} sm={4} xs={4}>\r\n                  Email\r\n                </Col>\r\n                <Col lg={4} md={4} sm={4} xs={4}>\r\n                  Actions\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n\r\n            {state.map((item, ind) => (\r\n              <ListGroup.Item key={ind} variant=\"light\">\r\n                <Row>\r\n                  <Col lg={4} md={4} sm={4} xs={4}>\r\n                    {item.name}\r\n                  </Col>\r\n                  <Col lg={4} md={4} sm={4} xs={4}>\r\n                    {item.email}\r\n                  </Col>\r\n                  <Col lg={4} md={4} sm={4} xs={4}>\r\n                    <Button\r\n                      variant=\"info\"\r\n                      size=\"sm\"\r\n                      as={Link}\r\n                      to={\"/SingleUser/\" + item._id}\r\n                    >\r\n                      View\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={() => DoEdit(item)}\r\n                    >\r\n                      Edit\r\n                    </Button>{\" \"}\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleDelete(item._id)}>\r\n                      Delete\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n\r\n      <Modal show={showEdit} onHide={() => setShowEdit(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <EditUser userObj={selectedUser} EditUserData={EditUserData} />\r\n        </Modal.Body>\r\n\r\n        {/* <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => {}}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\EditUser.js",["44"],"import React, { useState } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst EditUser = ({ userObj, EditUserData }) => {\r\n  const [name, setName] = useState(userObj.name);\r\n  const [email, setEmail] = useState(userObj.email);\r\n  const [pwd, setPwd] = useState(userObj.pwd);\r\n\r\n  const handleSubmit = () => {\r\n    let user = { name, email, pwd };\r\n    EditUserData(user);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col className=\"col-headers\">Name</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Email</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              email=\"email\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Password</Col>\r\n          <Col>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pwd\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center mt-2\">\r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":50,"nodeType":"51","messageId":"52","endLine":3,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":47,"column":20,"nodeType":"55","endLine":47,"endColumn":54},{"ruleId":"49","severity":1,"message":"56","line":11,"column":9,"nodeType":"51","messageId":"52","endLine":11,"endColumn":16},{"ruleId":"49","severity":1,"message":"57","line":19,"column":10,"nodeType":"51","messageId":"52","endLine":19,"endColumn":13},{"ruleId":"49","severity":1,"message":"58","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":19},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is assigned a value but never used.","'msg' is assigned a value but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]