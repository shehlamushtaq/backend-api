[{"E:\\Shehla\\expressjs\\backend-api\\client\\src\\index.js":"1","E:\\Shehla\\expressjs\\backend-api\\client\\src\\reportWebVitals.js":"2","E:\\Shehla\\expressjs\\backend-api\\client\\src\\App.js":"3","E:\\Shehla\\expressjs\\backend-api\\client\\src\\reducers\\rootReducers.js":"4","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AddUser.js":"5","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AllUsers.js":"6","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\SingleUser.js":"7","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\LoginUser.js":"8","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Posts.js":"9","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Header.js":"10","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\EditUser.js":"11","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\EditPost.js":"12","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\AllPosts.js":"13","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\AddPost.js":"14","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\ViewPost.js":"15","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\table\\Editable.js":"16"},{"size":799,"mtime":1612332188171,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1611639692866,"results":"19","hashOfConfig":"18"},{"size":1359,"mtime":1611723950870,"results":"20","hashOfConfig":"18"},{"size":485,"mtime":1611723950872,"results":"21","hashOfConfig":"18"},{"size":3340,"mtime":1611723950871,"results":"22","hashOfConfig":"18"},{"size":7695,"mtime":1612338072426,"results":"23","hashOfConfig":"18"},{"size":1885,"mtime":1611639692865,"results":"24","hashOfConfig":"18"},{"size":2705,"mtime":1611723950872,"results":"25","hashOfConfig":"18"},{"size":4732,"mtime":1611723950872,"results":"26","hashOfConfig":"18"},{"size":1177,"mtime":1611808362017,"results":"27","hashOfConfig":"18"},{"size":1669,"mtime":1611639692864,"results":"28","hashOfConfig":"18"},{"size":1493,"mtime":1611639692865,"results":"29","hashOfConfig":"18"},{"size":2535,"mtime":1611723950872,"results":"30","hashOfConfig":"18"},{"size":2586,"mtime":1611639692865,"results":"31","hashOfConfig":"18"},{"size":551,"mtime":1611639692866,"results":"32","hashOfConfig":"18"},{"size":3927,"mtime":1612335693892,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1scoeyo",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"37"},"E:\\Shehla\\expressjs\\backend-api\\client\\src\\index.js",["78"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { rootReducer } from \"./reducers/rootReducers\";\r\nimport Editable from \"./components/table/Editable\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["79","80"],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\reportWebVitals.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\App.js",["81"],"// import logo from './logo.svg';\r\nimport AddUser from \"./components/AddUser\";\r\nimport AllUsers from \"./components/AllUsers\";\r\nimport SingleUser from \"./components/SingleUser\";\r\nimport Header from \"./components/Header\";\r\nimport Posts from \"./components/Posts\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport LoginUser from \"./components/LoginUser\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <AllUsers />\r\n          </Route>\r\n          {/* -------------------------------- */}\r\n          <Route path=\"/SingleUser/:id\">\r\n            <SingleUser />\r\n          </Route>\r\n          {/* ------------------------------------- */}\r\n\r\n          <Route path=\"/AddUser\" exact>\r\n            <AddUser />\r\n          </Route>\r\n          {/* ------------------------------------------- */}\r\n          <Route path=\"/posts\">\r\n            <Posts />\r\n          </Route>\r\n          {/* ----------------------------------------------- */}\r\n          <Route path=\"/login\">\r\n            <LoginUser />\r\n          </Route>\r\n          {/* ----------------------------------------------- */}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\reducers\\rootReducers.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AddUser.js",["82"],"import React, { useState, useRef } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import FileBase64 from 'react-file-base64';\r\n\r\nconst AddUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [img, setimg] = useState(\"\");\r\n\r\n  const msgRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = () => {\r\n    let user = { name, email, pwd, img };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/users/add\", user)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          history.push(\"/\");\r\n        } else {\r\n          msgRef.current.classList.remove(\"d-none\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Add user</h1>\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <h5 ref={msgRef} className=\"d-none\">\r\n            User Already Exists\r\n          </h5>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              New User information\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">Name</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    email=\"email\"\r\n                    name=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {/* //=================================================== */}\r\n              {/* <Row>\r\n                  <Col className=\"col-headers\">Desc</Col>\r\n                  <Col>\r\n                    <FileBase64\r\n                      multiple={false}\r\n                      onDone={({base64})=>setimg(base64)}\r\n                    />                </Col>\r\n                </Row> */}\r\n              {/* //========================================== */}\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                    Add User\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n\r\n//===============================================================================================================\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\AllUsers.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport EditUser from \"./EditUser\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Editable from \"./table/Editable\";\r\n// import DelModal from \"./DelModal\";\r\n\r\nconst AllUsers = () => {\r\n  const history = useHistory();\r\n\r\n  const [state, setstate] = useState([]);\r\n  const [cols, setCols] = useState([\r\n    { title: 'Name', field: 'name' },\r\n  { title: 'Email', field: 'email' }\r\n])\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [reload, setReload] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n\r\n  //================================================================show all users\r\n  useEffect(() => {\r\n    async function fetchUsers(){\r\n    const users = await axios.get(\"http://localhost:5000/api/users/\")\r\n      // .then((res) => {\r\n        console.log(users.data.data);\r\n        setstate(users.data.data);\r\n      // })\r\n    }\r\n    fetchUsers();\r\n      // .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  //const handleClose = () => setShow(false);\r\n\r\n  // const inithandleDelete = (obj) => {\r\n  //   setSelectedUser(obj);\r\n  //   setShow(true);\r\n  // };\r\n\r\n  // //const [show, setShow] = useState(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  //===============================================================Delete User\r\n\r\n  //const [msg, setMsg] = useState(\"\");\r\n\r\n  // const handleDelete = (id) => {\r\n  //   console.log(id);\r\n  //   axios\r\n  //     .delete(\"http://localhost:5000/api/users/\" + id)\r\n  //     .then((res) => {\r\n  //       console.log(res.data);\r\n  //       setMsg(`${id} is deleted`);\r\n  //       setReload(!reload);\r\n\r\n  //       setShow(false);\r\n\r\n  //       setTimeout(() => setMsg(\"\"), 5000);\r\n  //     })\r\n\r\n  //     .catch((e) => console.log(e));\r\n  // };\r\n\r\n  //================================================================show all users\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"http://localhost:5000/api/users/\")\r\n  //     .then((res) => {\r\n  //       console.log(res.data.data);\r\n  //       setstate(res.data.data);\r\n  //     })\r\n  //     .catch((e) => console.log(e));\r\n\r\n  // }, [reload]);\r\n\r\n  // }, [reload]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/users/\")\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n      \r\n  }, [reload]);\r\n*/\r\n\r\n  //====================================================================edit user\r\n  // const DoEdit = (obj) => {\r\n  //   setSelectedUser(obj);\r\n  //   setShowEdit(true);\r\n  // };\r\n\r\n  // const EditUserData = (obj) => {\r\n  //   const newObj = {\r\n  //     ...selectedUser,\r\n  //     ...obj,\r\n  //   };\r\n  //   axios\r\n  //     .post(\"http://localhost:5000/api/users/edit\", newObj)\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setShowEdit(false);\r\n  //       setSelectedUser({});\r\n  //       setReload(!reload);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\nconsole.log(state);\r\n  return (\r\n\r\n    <Editable rows={state} cols={cols}/>\r\n\r\n    // <div>\r\n    //   <h3>all users</h3>\r\n    //   <Row>\r\n    //     <Col className=\"text-center\">\r\n    //       <h5>{msg}</h5>\r\n    //     </Col>\r\n    //   </Row>\r\n    //   <Row>\r\n    //     <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    //     <Col lg={6} md={8} sm={10} xs={10}>\r\n    //       <ListGroup>\r\n    //         <ListGroup.Item variant=\"primary\">\r\n    //           <Row className=\"col-headers\">\r\n    //             <Col lg={4} md={4} sm={4} xs={4}>\r\n    //               Name\r\n    //             </Col>\r\n    //             <Col lg={4} md={4} sm={4} xs={4}>\r\n    //               Email\r\n    //             </Col>\r\n    //             <Col lg={4} md={4} sm={4} xs={4}>\r\n    //               Actions\r\n    //             </Col>\r\n    //           </Row>\r\n    //         </ListGroup.Item>\r\n\r\n    //         {state.map((item, ind) => (\r\n    //           <ListGroup.Item key={ind} variant=\"light\">\r\n    //             <Row>\r\n    //               <Col lg={4} md={4} sm={4} xs={4}>\r\n    //                 {item.name}\r\n    //               </Col>\r\n    //               <Col lg={4} md={4} sm={4} xs={4}>\r\n    //                 {item.email}\r\n    //               </Col>\r\n    //               <Col lg={4} md={4} sm={4} xs={4}>\r\n    //                 <Button\r\n    //                   variant=\"info\"\r\n    //                   size=\"sm\"\r\n    //                   as={Link}\r\n    //                   to={\"/SingleUser/\" + item._id}\r\n    //                 >\r\n    //                   View\r\n    //                 </Button>{\" \"}\r\n    //                 <Button\r\n    //                   variant=\"success\"\r\n    //                   size=\"sm\"\r\n    //                   onClick={() => DoEdit(item)}\r\n    //                 >\r\n    //                   Edit\r\n    //                 </Button>{\" \"}\r\n    //                 <Button\r\n    //                   variant=\"danger\"\r\n    //                   size=\"sm\"\r\n    //                   onClick={() => inithandleDelete(item)}\r\n    //                 >\r\n    //                   Delete\r\n    //                 </Button>\r\n    //               </Col>\r\n    //             </Row>\r\n    //           </ListGroup.Item>\r\n    //         ))}\r\n    //       </ListGroup>\r\n    //     </Col>\r\n    //     <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    //   </Row>\r\n    //   {/* ===================================================================================modal for editing */}\r\n    //   <Modal show={showEdit} onHide={() => setShowEdit(false)}>\r\n    //     <Modal.Header closeButton>\r\n    //       <Modal.Title>Modal heading</Modal.Title>\r\n    //     </Modal.Header>\r\n\r\n    //     <Modal.Body>\r\n    //       <EditUser userObj={selectedUser} EditUserData={EditUserData} />\r\n    //     </Modal.Body>\r\n\r\n    //     {/* <Modal.Footer>\r\n    //       <Button variant=\"primary\" onClick={() => {}}>\r\n    //         Save Changes\r\n    //       </Button>\r\n    //     </Modal.Footer> */}\r\n    //     {/* //======================================================deletion confirmation modale */}\r\n    //   </Modal>\r\n    //   <Modal show={show} onHide={() => setShow(false)}>\r\n    //     <Modal.Header closeButton>\r\n    //       <Modal.Title>Confirmation to Delete</Modal.Title>\r\n    //     </Modal.Header>\r\n\r\n    //     <Modal.Body>\r\n    //       <p>Are you sure you want to Delete</p>\r\n    //     </Modal.Body>\r\n\r\n    //     <Modal.Footer>\r\n    //       <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n    //         cancel\r\n    //       </Button>\r\n    //       <Button\r\n    //         variant=\"primary\"\r\n    //         onClick={() => handleDelete(selectedUser._id)}\r\n    //       >\r\n    //         Yes\r\n    //       </Button>\r\n    //     </Modal.Footer>\r\n    //   </Modal>\r\n    // </div>\r\n  );\r\n};\r\n{\r\n  /* //====================================================model of delete */\r\n}\r\n{\r\n  /* <Modal show={show} onHide={() => setShow(false)}>\r\n<Modal.Header closeButton>\r\n  <Modal.Title>Confirmation of deletion</Modal.Title>\r\n</Modal.Header>\r\n<Modal.Body>\r\n  Are you sure you want to delete\r\n</Modal.Body>\r\n<Modal.Footer>\r\n  <Button variant=\"primary\" onClick={() => {handleDelete}}>\r\n    yes\r\n  </Button>\r\n  <Button variant=\"primary\">cancel</Button>\r\n</Modal.Footer>\r\n</Modal>\r\n</div>\r\n);\r\n};\r\n//====================================================model of delete */\r\n}\r\n\r\nexport default AllUsers;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\SingleUser.js",["105"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SingleUser = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/users/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => setUser(data.data))\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Single user</h2>\r\n\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              Selected User information\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">ID</Col>\r\n                <Col>{user?._id}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Name</Col>\r\n                <Col>{user?.name}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>{user?.email}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>{user?.pwd}</Col>\r\n              </Row>\r\n              <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img width={100} src={user?.img}/></Col>\r\n            </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleUser;\r\n//==========================================================================================================\r\n\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\LoginUser.js",["106"],"import React, { useState, useRef } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst LoginUser = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const msgRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    let user = { email, pwd };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/users/login\", user)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          dispatch({\r\n            type: \"DO_LOGIN\",\r\n            payload: res.data.data,\r\n          });\r\n          history.push(\"/\");\r\n        } else {\r\n          msgRef.current.innerHTML = res.data.msg;\r\n          msgRef.current.classList.remove(\"d-none\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err.data.code === \"error\") {\r\n        //   msgRef.current.classList.remove(\"d-none\");\r\n        // }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login user</h1>\r\n      <Row>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <h5 ref={msgRef} className=\"d-none\"></h5>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              Existing User Login\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col className=\"col-headers\">Email</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    email=\"email\"\r\n                    name=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"col-headers\">Password</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {/* //=================================================== */}\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                    Log In\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Posts.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\Header.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\EditUser.js",["107"],"import React, { useState } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst EditUser = ({ userObj, EditUserData }) => {\r\n  const [name, setName] = useState(userObj.name);\r\n  const [email, setEmail] = useState(userObj.email);\r\n  const [pwd, setPwd] = useState(userObj.pwd);\r\n\r\n  console.log(\"Name:\", name);\r\n  const handleSubmit = () => {\r\n    let user = { name, email, pwd };\r\n    EditUserData(user);\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col className=\"col-headers\">Name</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Email</Col>\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              email=\"email\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-headers\">Password</Col>\r\n          <Col>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pwd\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center mt-2\">\r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\EditPost.js",["108"],"import React, { useState } from \"react\";\r\nimport { Row, Col, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst EditPost = ({ editPost, EditPostData, setShowEdit }) => {\r\n  console.log(editPost);\r\n  const [title, setTitle] = useState(editPost?.title);\r\n  const [descrip, setDesccrip] = useState(editPost?.description);\r\n  console.log(title);\r\n  const handleSubmit = () => {\r\n    const newobj = {\r\n      ...editPost,\r\n      title,\r\n      description: descrip,\r\n    };\r\n    EditPostData(newobj);\r\n    setShowEdit(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <h1> Edit Post</h1> */}\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"col-headers\">Title</Col>\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-headers\">Description</Col>\r\n            <Col>\r\n              <textarea\r\n                type=\"text\"\r\n                onChange={(e) => setDesccrip(e.target.value)}\r\n                value={descrip}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button variant=\"primary\" size=\"sm\" onClick={handleSubmit}>\r\n                Save Post Changes\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\AllPosts.js",[],["109","110"],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\AddPost.js",[],"E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\post\\ViewPost.js",["111","112","113"],"import React, { useState } from \"react\";\r\nimport { Row, Col, ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst ViewPost = ({ editPost }) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"col-headers\">Title</Col>\r\n            <Col>{editPost?.title}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-headers\">Description</Col>\r\n            <Col>{editPost?.description}</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","E:\\Shehla\\expressjs\\backend-api\\client\\src\\components\\table\\Editable.js",["114"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\nfunction Editable({rows , cols}) {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState(cols);\r\n  \r\n    const [data, setData] = useState([\r\n      // { name: 'Mehmet', surname: 'Baran'},\r\n      // { name: 'Zerya Betül', surname: 'Baran'},\r\n    ]);\r\n    useEffect(()=>{\r\n      setData(rows)\r\n      setColumns(cols)\r\n    },[rows])\r\n  \r\n    return (\r\n      <MaterialTable   icons={tableIcons}\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\n  export default Editable\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"115","severity":1,"message":"116","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":8,"column":50,"nodeType":"117","messageId":"118","endLine":8,"endColumn":54},{"ruleId":"115","severity":1,"message":"124","line":11,"column":15,"nodeType":"117","messageId":"118","endLine":11,"endColumn":21},{"ruleId":"115","severity":1,"message":"125","line":2,"column":31,"nodeType":"117","messageId":"118","endLine":2,"endColumn":37},{"ruleId":"115","severity":1,"message":"123","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"126","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":19},{"ruleId":"115","severity":1,"message":"127","line":4,"column":21,"nodeType":"117","messageId":"118","endLine":4,"endColumn":24},{"ruleId":"115","severity":1,"message":"128","line":4,"column":26,"nodeType":"117","messageId":"118","endLine":4,"endColumn":29},{"ruleId":"115","severity":1,"message":"129","line":4,"column":31,"nodeType":"117","messageId":"118","endLine":4,"endColumn":37},{"ruleId":"115","severity":1,"message":"130","line":4,"column":39,"nodeType":"117","messageId":"118","endLine":4,"endColumn":44},{"ruleId":"115","severity":1,"message":"131","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":16},{"ruleId":"115","severity":1,"message":"132","line":12,"column":9,"nodeType":"117","messageId":"118","endLine":12,"endColumn":16},{"ruleId":"115","severity":1,"message":"133","line":15,"column":16,"nodeType":"117","messageId":"118","endLine":15,"endColumn":23},{"ruleId":"115","severity":1,"message":"134","line":19,"column":10,"nodeType":"117","messageId":"118","endLine":19,"endColumn":18},{"ruleId":"115","severity":1,"message":"135","line":19,"column":20,"nodeType":"117","messageId":"118","endLine":19,"endColumn":31},{"ruleId":"115","severity":1,"message":"136","line":20,"column":10,"nodeType":"117","messageId":"118","endLine":20,"endColumn":22},{"ruleId":"115","severity":1,"message":"137","line":20,"column":24,"nodeType":"117","messageId":"118","endLine":20,"endColumn":39},{"ruleId":"115","severity":1,"message":"138","line":21,"column":10,"nodeType":"117","messageId":"118","endLine":21,"endColumn":16},{"ruleId":"115","severity":1,"message":"139","line":21,"column":18,"nodeType":"117","messageId":"118","endLine":21,"endColumn":27},{"ruleId":"115","severity":1,"message":"140","line":22,"column":10,"nodeType":"117","messageId":"118","endLine":22,"endColumn":14},{"ruleId":"115","severity":1,"message":"141","line":22,"column":16,"nodeType":"117","messageId":"118","endLine":22,"endColumn":23},{"ruleId":"115","severity":1,"message":"142","line":23,"column":10,"nodeType":"117","messageId":"118","endLine":23,"endColumn":13},{"ruleId":"115","severity":1,"message":"143","line":23,"column":15,"nodeType":"117","messageId":"118","endLine":23,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":229,"column":1,"nodeType":"146","messageId":"147","endLine":231,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":232,"column":1,"nodeType":"146","messageId":"147","endLine":251,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":47,"column":20,"nodeType":"150","endLine":47,"endColumn":54},{"ruleId":"151","severity":1,"message":"152","line":46,"column":11,"nodeType":"150","endLine":46,"endColumn":47},{"ruleId":"115","severity":1,"message":"126","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":19},{"ruleId":"115","severity":1,"message":"126","line":2,"column":20,"nodeType":"117","messageId":"118","endLine":2,"endColumn":29},{"ruleId":"119","replacedBy":"153"},{"ruleId":"121","replacedBy":"154"},{"ruleId":"115","severity":1,"message":"155","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"126","line":2,"column":20,"nodeType":"117","messageId":"118","endLine":2,"endColumn":29},{"ruleId":"115","severity":1,"message":"129","line":2,"column":31,"nodeType":"117","messageId":"118","endLine":2,"endColumn":37},{"ruleId":"156","severity":1,"message":"157","line":54,"column":7,"nodeType":"158","endLine":54,"endColumn":13,"suggestions":"159"},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'Link' is defined but never used.","'setimg' is assigned a value but never used.","'useRef' is defined but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'EditUser' is defined but never used.","'history' is assigned a value but never used.","'setCols' is assigned a value but never used.","'showEdit' is assigned a value but never used.","'setShowEdit' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","'setSelectedUser' is assigned a value but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["160"],["161"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cols'. Either include it or remove the dependency array. If 'setColumns' needs the current value of 'cols', you can also switch to useReducer instead of useState and read 'cols' in the reducer.","ArrayExpression",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Update the dependencies array to be: [cols, rows]",{"range":"165","text":"166"},[2641,2647],"[cols, rows]"]